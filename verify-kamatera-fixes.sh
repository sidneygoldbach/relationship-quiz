#!/bin/bash

# Script para verificar se as corre√ß√µes foram aplicadas no servidor Kamatera
# Este script deve ser executado no servidor Kamatera ap√≥s a atualiza√ß√£o

echo "üîç VERIFICA√á√ÉO DAS CORRE√á√ïES NO KAMATERA"
echo "==========================================="
echo ""

# 1. Verificar vers√£o do c√≥digo (√∫ltimo commit)
echo "üìã 1. Verificando vers√£o do c√≥digo..."
echo "√öltimo commit:"
git log -1 --oneline
echo "Branch atual:"
git branch --show-current
echo ""

# 2. Verificar status dos servi√ßos
echo "üîß 2. Verificando status dos servi√ßos..."
echo "Status do servi√ßo relationship-quiz:"
sudo systemctl status relationship-quiz --no-pager -l
echo ""
echo "Status do PostgreSQL:"
sudo systemctl status postgresql --no-pager -l
echo ""

# 3. Verificar conex√£o com banco de dados
echo "üóÑÔ∏è  3. Verificando conex√£o com banco de dados..."
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
    if PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "SELECT version();" > /dev/null 2>&1; then
        echo "‚úÖ Conex√£o com banco de dados OK"
    else
        echo "‚ùå Falha na conex√£o com banco de dados"
        echo "Verifique as configura√ß√µes no arquivo .env"
    fi
else
    echo "‚ùå Arquivo .env n√£o encontrado"
fi
echo ""

# 4. Verificar op√ß√µes duplicadas
echo "üîç 4. Verificando op√ß√µes duplicadas..."
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
    
    echo "Contando op√ß√µes por idioma:"
    PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "
        SELECT 
            language,
            COUNT(*) as total_options
        FROM quiz_options 
        GROUP BY language 
        ORDER BY language;
    "
    
    echo ""
    echo "Verificando op√ß√µes duplicadas:"
    DUPLICATES=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -t -c "
        SELECT COUNT(*) 
        FROM (
            SELECT text, language, COUNT(*) 
            FROM quiz_options 
            GROUP BY text, language 
            HAVING COUNT(*) > 1
        ) duplicates;
    ")
    
    DUPLICATES=$(echo $DUPLICATES | tr -d ' ')
    
    if [ "$DUPLICATES" = "0" ]; then
        echo "‚úÖ Nenhuma op√ß√£o duplicada encontrada!"
    else
        echo "‚ùå Encontradas $DUPLICATES op√ß√µes duplicadas:"
        PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "
            SELECT text, language, COUNT(*) as duplicates
            FROM quiz_options 
            GROUP BY text, language 
            HAVING COUNT(*) > 1
            ORDER BY COUNT(*) DESC;
        "
    fi
else
    echo "‚ùå N√£o foi poss√≠vel verificar - arquivo .env n√£o encontrado"
fi
echo ""

# 5. Verificar se aplica√ß√£o est√° respondendo
echo "üåê 5. Verificando se aplica√ß√£o est√° respondendo..."
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Aplica√ß√£o est√° respondendo na porta 3000"
    
    # Testar endpoint espec√≠fico do quiz
    if curl -s http://localhost:3000/api/quiz/questions > /dev/null; then
        echo "‚úÖ API do quiz est√° funcionando"
    else
        echo "‚ö†Ô∏è  API do quiz n√£o est√° respondendo"
    fi
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo na porta 3000"
    echo "Verifique os logs:"
    sudo journalctl -u relationship-quiz --no-pager -l --since "10 minutes ago"
fi
echo ""

# 6. Verificar logs recentes
echo "üìã 6. Logs recentes da aplica√ß√£o (√∫ltimos 20 linhas):"
sudo journalctl -u relationship-quiz --no-pager -l -n 20
echo ""

# 7. Resumo final
echo "üìä RESUMO DA VERIFICA√á√ÉO"
echo "========================"
echo "‚úÖ = OK | ‚ùå = Problema | ‚ö†Ô∏è  = Aten√ß√£o"
echo ""
echo "Para corrigir problemas encontrados:"
echo "1. Se h√° op√ß√µes duplicadas: execute ./remove-remaining-duplicates.js"
echo "2. Se servi√ßo n√£o est√° rodando: sudo systemctl restart relationship-quiz"
echo "3. Se aplica√ß√£o n√£o responde: verifique logs com 'sudo journalctl -u relationship-quiz -f'"
echo "4. Se banco n√£o conecta: execute ./fix-postgres-auth.sh"
echo ""
echo "üîÑ Para aplicar corre√ß√µes novamente: ./update-kamatera.sh"
echo ""