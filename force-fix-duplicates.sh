#!/bin/bash

# Script para for√ßar a corre√ß√£o de op√ß√µes duplicadas no Kamatera
# Use este script se ainda houver op√ß√µes duplicadas ap√≥s a atualiza√ß√£o

echo "üîß CORRE√á√ÉO FOR√áADA DE OP√á√ïES DUPLICADAS"
echo "========================================"
echo ""

# Verificar se arquivo .env existe
if [ ! -f ".env" ]; then
    echo "‚ùå Arquivo .env n√£o encontrado!"
    echo "Execute primeiro: ./fix-postgres-auth.sh"
    exit 1
fi

# Carregar vari√°veis do .env
export $(grep -v '^#' .env | xargs)

# 1. Parar servi√ßos
echo "üõë 1. Parando servi√ßos..."
sudo systemctl stop relationship-quiz
echo ""

# 2. Fazer backup antes da corre√ß√£o
echo "üì¶ 2. Fazendo backup de seguran√ßa..."
BACKUP_FILE="emergency_backup_$(date +%Y%m%d_%H%M%S).sql"
PGPASSWORD="$DB_PASSWORD" pg_dump -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" > "$BACKUP_FILE"
echo "‚úÖ Backup salvo em: $BACKUP_FILE"
echo ""

# 3. Executar scripts de corre√ß√£o em sequ√™ncia
echo "üîß 3. Aplicando corre√ß√µes..."

echo "   ‚Üí Diagnosticando op√ß√µes duplicadas..."
node diagnose-duplicate-options.js

echo "   ‚Üí Removendo op√ß√µes duplicadas..."
node fix-duplicate-options.js

echo "   ‚Üí Corrigindo idiomas misturados..."
node fix-mixed-language-options.js

echo "   ‚Üí Removendo duplicatas restantes..."
node remove-remaining-duplicates.js

echo "   ‚Üí Adicionando op√ß√µes em espanhol..."
node add-spanish-options.js

echo "   ‚Üí Verifica√ß√£o final..."
node final-verification.js

echo ""

# 4. Verificar resultado
echo "üîç 4. Verificando resultado..."
echo "Contagem final de op√ß√µes:"
PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "
    SELECT 
        language,
        COUNT(*) as total_options
    FROM quiz_options 
    GROUP BY language 
    ORDER BY language;
"

echo ""
echo "Verificando duplicatas:"
DUPLICATES=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -t -c "
    SELECT COUNT(*) 
    FROM (
        SELECT text, language, COUNT(*) 
        FROM quiz_options 
        GROUP BY text, language 
        HAVING COUNT(*) > 1
    ) duplicates;
")

DUPLICATES=$(echo $DUPLICATES | tr -d ' ')

if [ "$DUPLICATES" = "0" ]; then
    echo "‚úÖ Corre√ß√£o bem-sucedida! Nenhuma duplicata encontrada."
else
    echo "‚ùå Ainda existem $DUPLICATES op√ß√µes duplicadas."
    echo "Listando duplicatas restantes:"
    PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "
        SELECT text, language, COUNT(*) as duplicates
        FROM quiz_options 
        GROUP BY text, language 
        HAVING COUNT(*) > 1
        ORDER BY COUNT(*) DESC;
    "
fi
echo ""

# 5. Reiniciar servi√ßos
echo "üîÑ 5. Reiniciando servi√ßos..."
sudo systemctl start relationship-quiz
sudo systemctl status relationship-quiz --no-pager -l
echo ""

# 6. Teste final
echo "üß™ 6. Teste final da aplica√ß√£o..."
sleep 5  # Aguardar inicializa√ß√£o

if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Aplica√ß√£o est√° funcionando!"
    
    # Testar API
    if curl -s http://localhost:3000/api/quiz/questions > /dev/null; then
        echo "‚úÖ API do quiz est√° respondendo!"
    else
        echo "‚ö†Ô∏è  API do quiz n√£o est√° respondendo"
    fi
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo"
    echo "Verificando logs:"
    sudo journalctl -u relationship-quiz --no-pager -l -n 10
fi

echo ""
echo "üéØ CORRE√á√ÉO CONCLU√çDA!"
echo "====================="
echo "Backup de seguran√ßa: $BACKUP_FILE"
echo "Para verificar status: ./verify-kamatera-fixes.sh"
echo "Para ver logs: sudo journalctl -u relationship-quiz -f"
echo ""