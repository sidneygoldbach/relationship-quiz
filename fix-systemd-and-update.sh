#!/bin/bash

# Script para corrigir servi√ßo systemd e executar atualiza√ß√£o no Kamatera
# Use este script quando o update-kamatera.sh falhar com "Unit relationship-quiz.service not loaded"

echo "üîß CORRE√á√ÉO DO SERVI√áO SYSTEMD + ATUALIZA√á√ÉO"
echo "============================================"
echo ""

# 1. Verificar se o servi√ßo systemd existe
echo "üîç 1. Verificando servi√ßo systemd..."
if systemctl list-unit-files | grep -q "relationship-quiz.service"; then
    echo "‚úÖ Servi√ßo systemd encontrado"
else
    echo "‚ùå Servi√ßo systemd n√£o encontrado - configurando..."
    
    # Copiar arquivo de servi√ßo
    if [ -f "relationship-quiz.service" ]; then
        echo "üìã Copiando arquivo de servi√ßo..."
        sudo cp relationship-quiz.service /etc/systemd/system/
        
        # Recarregar daemon
        echo "üîÑ Recarregando systemd daemon..."
        sudo systemctl daemon-reload
        
        # Habilitar servi√ßo
        echo "‚úÖ Habilitando servi√ßo..."
        sudo systemctl enable relationship-quiz
        
        echo "‚úÖ Servi√ßo systemd configurado com sucesso!"
    else
        echo "‚ùå Arquivo relationship-quiz.service n√£o encontrado!"
        echo "Execute primeiro: git pull origin main"
        exit 1
    fi
fi
echo ""

# 2. Verificar se h√° processo Node.js rodando na porta 3000
echo "üîç 2. Verificando processos na porta 3000..."
PID=$(lsof -ti:3000)
if [ ! -z "$PID" ]; then
    echo "‚ö†Ô∏è  Processo encontrado na porta 3000 (PID: $PID)"
    echo "Parando processo..."
    kill -TERM $PID
    sleep 3
    
    # Verificar se ainda est√° rodando
    if kill -0 $PID 2>/dev/null; then
        echo "For√ßando parada do processo..."
        kill -KILL $PID
    fi
    echo "‚úÖ Processo parado"
else
    echo "‚úÖ Nenhum processo na porta 3000"
fi
echo ""

# 3. Fazer backup do banco de dados
echo "üì¶ 3. Fazendo backup do banco de dados..."
DATE=$(date +"%Y%m%d_%H%M%S")
BACKUP_FILE="quiz_app_backup_${DATE}.sql"

if [ -f ".env" ]; then
    # Carregar vari√°veis do .env
    export $(grep -v '^#' .env | xargs)
    
    # Usar vari√°veis de ambiente para backup
    PGPASSWORD="$DB_PASSWORD" pg_dump -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" > "$BACKUP_FILE"
else
    echo "‚ùå Arquivo .env n√£o encontrado. Usando configura√ß√µes padr√£o..."
    pg_dump -U quiz_user -h localhost quiz_app > "$BACKUP_FILE"
fi

if [ -f "$BACKUP_FILE" ] && [ -s "$BACKUP_FILE" ]; then
    echo "‚úÖ Backup criado: $BACKUP_FILE"
else
    echo "‚ùå Falha no backup! Abortando atualiza√ß√£o."
    exit 1
fi
echo ""

# 4. Atualizar c√≥digo
echo "üì• 4. Atualizando c√≥digo do GitHub..."
git pull origin main
echo ""

# 5. Instalar/atualizar depend√™ncias
echo "üì¶ 5. Instalando depend√™ncias..."
npm install
echo ""

# 6. Aplicar corre√ß√µes de op√ß√µes duplicadas
echo "üîß 6. Aplicando corre√ß√µes de op√ß√µes duplicadas..."

echo "   ‚Üí Diagnosticando op√ß√µes duplicadas..."
node diagnose-duplicate-options.js

echo "   ‚Üí Removendo op√ß√µes duplicadas..."
node fix-duplicate-options.js

echo "   ‚Üí Corrigindo idiomas misturados..."
node fix-mixed-language-options.js

echo "   ‚Üí Removendo duplicatas restantes..."
node remove-remaining-duplicates.js

echo "   ‚Üí Adicionando op√ß√µes em espanhol..."
node add-spanish-options.js

echo "   ‚Üí Verifica√ß√£o final..."
node final-verification.js

echo ""

# 7. Iniciar servi√ßo
echo "üöÄ 7. Iniciando servi√ßo..."
sudo systemctl start relationship-quiz

# Aguardar inicializa√ß√£o
echo "‚è≥ Aguardando inicializa√ß√£o..."
sleep 5

# Verificar status
echo "üìä Status do servi√ßo:"
sudo systemctl status relationship-quiz --no-pager -l
echo ""

# 8. Verifica√ß√£o final
echo "üß™ 8. Verifica√ß√£o final..."
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Aplica√ß√£o est√° funcionando!"
    
    # Testar API
    if curl -s http://localhost:3000/api/quiz/questions > /dev/null; then
        echo "‚úÖ API do quiz est√° respondendo!"
    else
        echo "‚ö†Ô∏è  API do quiz n√£o est√° respondendo"
    fi
else
    echo "‚ùå Aplica√ß√£o n√£o est√° respondendo"
    echo "Verificando logs:"
    sudo journalctl -u relationship-quiz --no-pager -l -n 10
fi

echo ""
echo "üéØ ATUALIZA√á√ÉO CONCLU√çDA!"
echo "========================"
echo "Backup criado: $BACKUP_FILE"
echo "Para verificar status: ./verify-kamatera-fixes.sh"
echo "Para ver logs: sudo journalctl -u relationship-quiz -f"
echo ""